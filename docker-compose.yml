x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: airflow.Dockerfile
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./spark_scripts:/opt/airflow/spark_scripts
    - ./logs:/opt/airflow/logs
  depends_on:
    - postgres
  networks:
    - default_nw

services:

  ####
  ### SPARK Container services
  ####

  spark-master:
    container_name: spark-master
    build:
      dockerfile: spark.Dockerfile
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost:8081" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - ./data:/opt/spark/data
      - ./spark_scripts:/opt/spark/spark_scripts
      - spark-logs:/opt/spark/spark-events
    env_file:
      - .env.spark
    ports:
      - '8081:8081'
      - '7077:7077'
    networks:
      - default_nw

  spark-history-server:
    container_name: spark-history
    image: spark-image
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./data:/opt/spark/data
      - ./spark_scripts:/opt/spark/spark_scripts
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'
    networks:
      - default_nw

  spark-worker-1:
    container_name: spark-worker-1
    image: spark-image
    environment:
      - SPARK_MODE=worker
        - SPARK_MASTER_URL=spark://spark-master:7077
        - SPARK_WORKER_MEMORY=1G
        - SPARK_WORKER_CORES=1
        - SPARK_RPC_AUTHENTICATION_ENABLED=no
        - SPARK_RPC_ENCRYPTION_ENABLED=no
        - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
        - SPARK_SSL_ENABLED=no
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    env_file:
      - .env.spark
    volumes:
      - ./data:/opt/spark/data
      - ./spark_scripts:/opt/spark/spark_scripts
      - spark-logs:/opt/spark/spark-events
    networks:
      - default_nw

  ####
  ### Airflow Container services
  ####

  postgres:
    image: postgres:13.0
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - default_nw

  scheduler:
    <<: *airflow-common
    command: bash -c "airflow db migrate && airflow users create --username admin --firstname Rohit --lastname Phadtare --role Admin --email rohitphadtare39@gmail.com --password admin && airflow scheduler"

  webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      - scheduler


networks:
  default_nw:

volumes:
  spark-logs: